# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Wed Apr 17 03:36:32 2024
# Designs open: 1
#   Sim: /afs/andrew.cmu.edu/usr16/skuniset/private/Projects/8Bit_CommonBusCPU/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: testbench
#   Wave.1: 81 signals
#   Group count = 9
#   Group CPU signal count = 24
#   Group reg_sel signal count = 6
#   Group reg_file signal count = 10
#   Group pc signal count = 6
#   Group microcode signal count = 13
#   Group ir signal count = 6
#   Group alu_inst signal count = 5
#   Group ALU_src2 signal count = 6
#   Group ALU_src1 signal count = 5
# End_DVE_Session_Save_Info

# DVE version: K-2015.09_Full64
# DVE build date: Aug 25 2015 21:36:02


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE top-level session


# Create and position top-level window: TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level window: TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 477} {child_wave_right 1165} {child_wave_colname 236} {child_wave_colvalue 237} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

gui_set_precision 1s
gui_set_time_units 1s
#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups
gui_load_child_values {testbench.CPU.ALU_src1}
gui_load_child_values {testbench.CPU.pc}
gui_load_child_values {testbench.CPU.ALU_src2}
gui_load_child_values {testbench.CPU.ir}
gui_load_child_values {testbench.CPU}
gui_load_child_values {testbench.CPU.microcode}
gui_load_child_values {testbench.CPU.reg_file}
gui_load_child_values {testbench.CPU.alu_inst}
gui_load_child_values {testbench.CPU.reg_sel}


set _session_group_127 CPU
gui_sg_create "$_session_group_127"
set CPU "$_session_group_127"

gui_sg_addsignal -group "$_session_group_127" { testbench.CPU.alu_src1 testbench.CPU.alu_src2 testbench.CPU.program_counter testbench.CPU.rf_write_read testbench.CPU.alu_out testbench.CPU.clock testbench.CPU.imm_instruction testbench.CPU.sel_field_load_en testbench.CPU.output_reg testbench.CPU.reg_sel_field testbench.CPU.alu_op testbench.CPU.data_bus testbench.CPU.alu_src1_load_en testbench.CPU.instruction testbench.CPU.data_bus_sel testbench.CPU.reset_n testbench.CPU.instruction_register testbench.CPU.reg_val_or_pc testbench.CPU.register_value_or_pc testbench.CPU.reg_read_data testbench.CPU.alu_src2_load_en testbench.CPU.pc_load_en testbench.CPU.opcode testbench.CPU.ir_load_en }

set _session_group_128 reg_sel
gui_sg_create "$_session_group_128"
set reg_sel "$_session_group_128"

gui_sg_addsignal -group "$_session_group_128" { testbench.CPU.reg_sel.clock testbench.CPU.reg_sel.reset_n testbench.CPU.reg_sel.load_en testbench.CPU.reg_sel.D testbench.CPU.reg_sel.Q {testbench.CPU.reg_sel.$unit} }

set _session_group_129 reg_file
gui_sg_create "$_session_group_129"
set reg_file "$_session_group_129"

gui_sg_addsignal -group "$_session_group_129" { testbench.CPU.reg_file.clock testbench.CPU.reg_file.reset_n testbench.CPU.reg_file.rf_write_read testbench.CPU.reg_file.address testbench.CPU.reg_file.w_data testbench.CPU.reg_file.r_data testbench.CPU.reg_file.output_reg_val testbench.CPU.reg_file.reg_file testbench.CPU.reg_file.output_reg_addr {testbench.CPU.reg_file.$unit} }

set _session_group_130 pc
gui_sg_create "$_session_group_130"
set pc "$_session_group_130"

gui_sg_addsignal -group "$_session_group_130" { testbench.CPU.pc.pc_load_en testbench.CPU.pc.clock testbench.CPU.pc.reset_n testbench.CPU.pc.pc_next testbench.CPU.pc.pc {testbench.CPU.pc.$unit} }

set _session_group_131 microcode
gui_sg_create "$_session_group_131"
set microcode "$_session_group_131"

gui_sg_addsignal -group "$_session_group_131" { testbench.CPU.microcode.clock testbench.CPU.microcode.reset_n testbench.CPU.microcode.imm_instruction testbench.CPU.microcode.data_bus_sel testbench.CPU.microcode.pc_load_en testbench.CPU.microcode.ir_load_en testbench.CPU.microcode.rf_write_read testbench.CPU.microcode.alu_src1_load_en testbench.CPU.microcode.alu_src2_load_en testbench.CPU.microcode.sel_field_load_en testbench.CPU.microcode.cState testbench.CPU.microcode.nState {testbench.CPU.microcode.$unit} }

set _session_group_132 ir
gui_sg_create "$_session_group_132"
set ir "$_session_group_132"

gui_sg_addsignal -group "$_session_group_132" { testbench.CPU.ir.ir_load_en testbench.CPU.ir.clock testbench.CPU.ir.reset_n testbench.CPU.ir.instruction testbench.CPU.ir.instruction_register {testbench.CPU.ir.$unit} }

set _session_group_133 alu_inst
gui_sg_create "$_session_group_133"
set alu_inst "$_session_group_133"

gui_sg_addsignal -group "$_session_group_133" { testbench.CPU.alu_inst.alu_src_1 testbench.CPU.alu_inst.alu_src_2 testbench.CPU.alu_inst.alu_op testbench.CPU.alu_inst.alu_out {testbench.CPU.alu_inst.$unit} }

set _session_group_134 ALU_src2
gui_sg_create "$_session_group_134"
set ALU_src2 "$_session_group_134"

gui_sg_addsignal -group "$_session_group_134" { testbench.CPU.ALU_src2.clock testbench.CPU.ALU_src2.reset_n testbench.CPU.ALU_src2.load_en testbench.CPU.ALU_src2.D testbench.CPU.ALU_src2.Q {testbench.CPU.ALU_src2.$unit} }

set _session_group_135 ALU_src1
gui_sg_create "$_session_group_135"
set ALU_src1 "$_session_group_135"

gui_sg_addsignal -group "$_session_group_135" { testbench.CPU.ALU_src1.clock testbench.CPU.ALU_src1.D testbench.CPU.ALU_src1.Q testbench.CPU.ALU_src1.reset_n testbench.CPU.ALU_src1.load_en }

# Global: Highlighting

# Global: Stack
gui_change_stack_mode -mode list

# Post database loading setting...

# Save global setting...

# Wave/List view global setting
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 0} {Process 1} {VirtPowSwitch 0} {UnnamedProcess 1} {UDP 0} {Function 1} {Block 1} {SrsnAndSpaCell 0} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} {VirtIsoCell 0} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {LowPower 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {testbench.CPU.ALU_src1}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active testbench /afs/andrew.cmu.edu/usr16/skuniset/private/Projects/8Bit_CommonBusCPU/testbench.sv
gui_view_scroll -id ${Source.1} -vertical -set 64
gui_src_set_reusable -id ${Source.1}

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 27503908 27504210
gui_list_add_group -id ${Wave.1} -after {New Group} {CPU}
gui_list_add_group -id ${Wave.1} -after {New Group} {reg_sel}
gui_list_add_group -id ${Wave.1} -after {New Group} {reg_file}
gui_list_add_group -id ${Wave.1} -after {New Group} {pc}
gui_list_add_group -id ${Wave.1} -after {New Group} {microcode}
gui_list_add_group -id ${Wave.1} -after {New Group} {ir}
gui_list_add_group -id ${Wave.1} -after {New Group} {alu_inst}
gui_list_add_group -id ${Wave.1} -after {New Group} {ALU_src2}
gui_list_add_group -id ${Wave.1} -after {New Group} {ALU_src1}
gui_list_expand -id ${Wave.1} testbench.CPU.reg_file.reg_file
gui_seek_criteria -id ${Wave.1} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.1}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group ALU_src1  -position in

gui_view_scroll -id ${Wave.1} -vertical -set 150
gui_show_grid -id ${Wave.1} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${HSPane.1}
}
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
#</Session>

